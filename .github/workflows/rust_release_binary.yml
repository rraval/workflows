# Builds Rust binaries and attaches them as artifacts to a GitHub release.
#
# Meant to be used
#   on:
#     release:
#       types: [published]
#
# Heavily inspired by:
# https://github.com/AlexanderThaller/hstdb/blob/main/.github/workflows/rust_release.yml
name: Rust Release Binary
on:
  workflow_call:
    inputs:
      CARGO_BINARY_NAME:
        required: true
        type: string
        description: "Name of the binary to build with `cargo build --bin`"

env:
  CARGO_TERM_COLOR: always

jobs:
  upload-binary:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bin ${{ inputs.CARGO_BINARY_NAME }} --release --target ${{ matrix.target }}
          use-cross: true

      - name: Strip and compress binary
        run: |
          strip "target/${{ matrix.target }}/release/${{ inputs.CARGO_BINARY_NAME }}"
          gzip --force --best "target/${{ matrix.target }}/release/${{ inputs.CARGO_BINARY_NAME }}"

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: ${{ inputs.CARGO_BINARY_NAME }}_${{ github.event.release.tag_name }}_${{ matrix.target }}.gz
          asset_path: target/${{ matrix.target }}/release/${{ inputs.CARGO_BINARY_NAME }}.gz
          upload_url: ${{ github.event.release.upload_url }}
          asset_content_type: application/gzip
